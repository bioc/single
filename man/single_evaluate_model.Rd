% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/single_evaluate_model.r
\name{single_evaluate_model}
\alias{single_evaluate_model}
\title{Evaluate SINGLE model}
\usage{
single_evaluate_model(
  input_sam_file,
  input_fits_file,
  output_prefix,
  reference_sequence_fastafile,
  pos_start = NULL,
  pos_end = NULL,
  verbose = TRUE,
  gaps_weights = "none"
)
}
\arguments{
\item{input_sam_file}{File containing the counts per position returned by samtools mpileup}

\item{input_fits_file}{File containing the results of the SINGLE model. It will be saved when you run single_train_model.}

\item{output_prefix}{String. Prefix for output files}

\item{reference_sequence_fastafile}{Fasta file containing reference sequence}

\item{pos_start}{Numeric. Position to start analyzing, counting starts from 1 and it refers to reference used for minimap2 alignment.}

\item{pos_end}{Numeric. Position to stop analyzing, counting starts from 1 and it refers to reference used for minimap2 alignment.}

\item{verbose}{Logical}

\item{gaps_weights}{One of "minimum","none","mean". How to assign qscores to deletions.}
}
\value{
Creates file output_prefix_corrected.txt with the Qscores re-scaled by SINGLE. Columns are SeqID position nucleotide isWT original_quality p_right_priors_model.
}
\description{
Main function to evaluate a gene library using a SINGLE model.
}
\details{
Before running single_evaluate_function you have to align your INPUT data to a REFERENCE using minimap2 and count the nucleotides per position using samtools using these lines:

\code{minimap2 -ax map-ont --sam-hit-only  REFERENCE.fasta INPUT.fastq >ALIGNMENT.sam}

\code{samtools view -S -b ALIGNMENT.sam > ALIGNMENT.bam}

\code{samtools sort ALIGNMENT.bam -o ALIGNMENT.sorted.bam }

\code{samtools mpileup -Q 0 ALIGNMENT.sorted.bam > COUNTS.txt}
}
\examples{
input_sam_file = system.file("extdata", "example_sequences.sam", package = "single")
input_fits_file = system.file("extdata", "example_single_results.txt", package="single")
ref_seq_file = system.file("extdata", "ref_seq.fasta", package = "single")
outfile_ex = tempfile("example")
single_evaluate_model(input_sam_file,input_fits_file,outfile_ex,ref_seq_file, verbose=TRUE)
unlink(paste0(outfile_ex,"_single_results.txt"))
}
