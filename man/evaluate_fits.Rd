% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluate_fits.r
\name{evaluate_fits}
\alias{evaluate_fits}
\title{Evaluate SINGLE fits}
\usage{
evaluate_fits(
  pos_range,
  q_range,
  output_file,
  data_fits,
  reference_sequence,
  verbose = TRUE
)
}
\arguments{
\item{pos_range}{Numeric vector. Positions to evaluate.}

\item{q_range}{Numeric vector. Qscores to evaluate.}

\item{output_file}{File name for output, if save=TRUE.}

\item{data_fits}{Data.frame with columns position nucleotide slope intercept as the one returned by fit_logistic_regression.}

\item{reference_sequence}{Reference sequence: vector of characters, as returned by load_reference_sequence}

\item{verbose}{Logical.}
}
\value{
data.frame with SINGLE fits evaluated for pos_range and q_range. Columns are: position, nucleotide, quality, p_right_priors_model, isWT.
}
\description{
Evaluates single fits for all positions, nucleotides and Qscores in the given ranges.
}
\examples{
pos_range = seq_len(10)
q_range = seq(10,30)
ref_seq_file = system.file("extdata", "ref_seq.fasta", package = "single")
ref_seq = load_reference_sequence(ref_seq_file)
counts_pnq_file = system.file("extdata", "example_train_countsPNQ_sub.txt", package = "single")
counts_pnq = read.table(counts_pnq_file, header=TRUE)
prior_error = calculate_prior_errors(counts_pnq,reference_sequence=ref_seq)
prior_mutation = calculate_prior_mutations(mutation_rate, 3, ref_seq)
fits = fit_logistic_regression(counts_pnq, ref_seq,prior_error,prior_mutation)
outfile_ex = tempfile("evaluate_fits_example.txt")
evaluate_fits(pos_range,q_range,outfile_ex, fits,ref_seq, verbose=FALSE)
}
