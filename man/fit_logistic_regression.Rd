% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_logistic_regression.r
\name{fit_logistic_regression}
\alias{fit_logistic_regression}
\title{Fit SINGLE's logistic regression}
\usage{
fit_logistic_regression(
  counts_pnq,
  reference_sequence,
  prior_error,
  prior_mutation,
  save = FALSE,
  output_file_fits,
  output_file_data,
  verbose = FALSE
)
}
\arguments{
\item{counts_pnq}{Data frame with columns position nucleoide quality counts, as returned by parse_nucleotides_per_qscore.}

\item{reference_sequence}{Reference sequence: vector of characters, as returned by load_reference_sequence}

\item{prior_error}{Data frame with columns position nucleotide prior.error, as the one returned by calculate_prior_errors().}

\item{prior_mutation}{Data frame with columns wt.base, nucleotide and p_mutation (probaility of mutation), as the one returned by calculate_prior_mutations().}

\item{save}{Logical. Should data be saved in a output_file?}

\item{output_file_fits}{File into which save the single fits if save=TRUE}

\item{output_file_data}{File into which save the fitted data if save=TRUE}

\item{verbose}{Logical.}
}
\value{
data.frame with columns position, nucleotide, slope and intercept (of the sigmoidal regression).
}
\description{
This is an auxiliary function in single package. It takes counts_pnq and for each position and nucleotide it fits SINGLE's logistic regression.
}
\examples{
ref_seq_file = system.file("extdata", "ref_seq.fasta", package = "single")
ref_seq = load_reference_sequence(ref_seq_file)[seq_len(20)]
counts_pnq_file = system.file("extdata", "example_train_countsPNQ_sub.txt", package = "single")
counts_pnq = read.table(counts_pnq_file, header=TRUE)
prior_error = calculate_prior_errors(counts_pnq,reference_sequence=ref_seq)
prior_mutation = calculate_prior_mutations(mutation_rate, 3, ref_seq)
fit_logistic_regression(counts_pnq, ref_seq,prior_error,prior_mutation)
}
