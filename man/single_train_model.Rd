% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/single_train_model.r
\name{single_train_model}
\alias{single_train_model}
\title{Train SINGLE model}
\usage{
single_train_model(
  input_counts_file,
  output_prefix,
  reference_sequence_fastafile,
  rates.matrix = NULL,
  mean.n.mutations = NULL,
  pos_start = NULL,
  pos_end = NULL,
  verbose = TRUE,
  save_partial = FALSE
)
}
\arguments{
\item{input_counts_file}{File containing the counts per position returned by samtools mpileup}

\item{output_prefix}{String. Prefix for output files}

\item{reference_sequence_fastafile}{Fasta file containing reference sequence}

\item{rates.matrix}{Mutation rate matrix: 4x5 matrix, each row/col representing a nucleotide (col adds deletion), and the values is the mutational rate from row to col.}

\item{mean.n.mutations}{Mean number of mutations expected (one number).}

\item{pos_start}{Numeric. Position to start analyzing, counting starts from 1 and it refers to reference used for minimap2 alignment.}

\item{pos_end}{Numeric. Position to stop analyzing, counting starts from 1 and it refers to reference used for minimap2 alignment.}

\item{verbose}{Logical.}

\item{save_partial}{Logical. Should partial results be saved in files?}
}
\value{
Creates file output_prefix_single_results.txt with SINGLE training results.
}
\description{
Main function to train a SINGLE model in a set of reads of a reference / wild type sequence. To get the input data you will need to run before a minimap2 alignment and samtools counts.
}
\details{
Before running single_train_function you have to align your INPUT data to a REFERENCE using minimap2 and count the nucleotides per position using samtools using these lines:

\code{minimap2 -ax map-ont --sam-hit-only  REFERENCE.fasta INPUT.fastq >ALIGNMENT.sam}

\code{samtools view -S -b ALIGNMENT.sam > ALIGNMENT.bam}

\code{samtools sort ALIGNMENT.bam -o ALIGNMENT.sorted.bam }

\code{samtools mpileup -Q 0 ALIGNMENT.sorted.bam > COUNTS.txt}
}
\examples{
input_counts_file = system.file("extdata", "example_train_countsPNQ.txt", package = "single")
ref_seq_file = system.file("extdata", "ref_seq.fasta", package = "single")
outfile_ex = "example"
single_train_model(input_counts_file,outfile_ex,ref_seq_file, mutation_rate,5,5,10)
unlink(paste0(outfile_ex,"_single_results.txt"))
}
